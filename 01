// *href*在是CSS代码的一种意思是指定超链接目标的URL

//下面这些标签可用在 head 部分：

1、`head`标签为双标签，有尾标签，`<head></head>`。

2、`head`标签表示头部标签,通常用来嵌套`meta`、`title`、`style`等标签。

3、`<title>`标签：在<title>和</title>标签之间的文字内容是网页的标题信息，它会出现在浏览器的标题栏中。网页的title标签用于告诉用户和搜索引擎这个网页的主要内容是什么，搜索引擎可以通过网页标题，迅速的判断出网页的主题。每个网页的内容都是不同的，每个网页都应该有一个独一无二的title。

4、`<meta charset="UTF-8">`设置当前文件字符编码

5、`style`标签：双标签中设置当前文件样式

//多个span标签

<span id="id"><span> 给想要影响的那个加个id，然后用id选 #id {font-size:px}

//span和div的区别

都作为容器使用，最大的区别在于，span是行内元素，div是块级元素，span只占用页面中自身大小的一小块地方，div在页面中占满整行

//<header>开头</header>

和

//<footer>结尾</footer>

//<section>定义区段</section>

//<aside>侧边栏</aside>

//<br/>换行

//&nbsp;空格

在网页上显示nbsp

&amp;nbsp;，其中&amp;表示&

//<hr/>分割线

//ul-li是**没有前后顺序**的信息列表。

<ul><li>列表信息</ul></li>

//可以使用`<ol>`标签来制作**有序列表**来展示。

<ol>
    <li>一号</li>
    <li>二号</li>
</ol>

**//添加图片语法：**

<img src="图片地址" （alt="下载失败时的替换文本" ）（可有可无）title = "提示文本"（不出现在界面）>

*全有双引号""

//添加超链接**语法：**

```html
<a  href="目标网址"  title="鼠标滑过显示的文本">链接显示的文本</a>
```

//在浏览器窗口打开链接

![img](https://img.mukewang.com/5e917d9f000187c711100555.jpg)

**技术点的解释：**

a标签有的target属性，代表打开网页的方式。可选值为”_self和_blank”，默认值为_self，代表在当前页面打开链接，_blank代表在新窗口打开链接。

//制作表格table

创建表格的四个元素：table、tr、th、td

1、<table>…</table>：整个表格以<table>标记开始、</table>标记结束。

2、<tr>…</tr>：表格的一行，所以有几对tr 表格就有几行。

3、<td>…</td>：表格的一个单元格，一行中包含几对<td>...</td>，说明一行中就有几列。

4、<th>…</th>：表格的头部的一个单元格，表格表头。

5、表格中列的个数，取决于一行中数据单元格的个数。

6、border属性可以为表格添加边框，属性值为数字。

**注意：**

1、table标签用来定义整个表格，为双标签，必须有结束标签。

2、table标签里面可以放caption标签和tr标签。

3、caption标签用来定义表格的标题。

4、tr标签用来设置表格的行，tr里面只能放th或者td标签，一组tr标签代表一行。

5、th用来设置表格的标题，会加粗居中显示。也就是th标签中的文本默认为粗体并且居中显示。

6、td同来设置表格的列，一组td标签代表一列。

7、table表格在没有添加border属性之前, 在浏览器中显示是没有表格线的。

//定义表格

<thead>标签定义表格头部,<tbody>标签来定义表格的内容,<tfoot>来定义表格的底部

<!DOCTYPE html>
<html>

<!DOCTYPE html>
<html>


<head>
    <meta charset="UTF-8">
    <title>使用thead、tbody、tfoot标签</title>
</head>

<body>

    <h3>成绩表</h3>
    <hr/>
    <table border="1">
    <thead>
        <tr>
        <th>科目</th>
        <th>分数</th>
        </tr>
    </thead>
    <tbody>
        <tr>
        <td>语文</td>
        <td>99</td>
        </tr>
    </tbody>
    <tbody>
        <tr>
        <td>数学</td>
        <td>60</td>
        </tr>
    </tbody>
    <tfoot>
        <tr>
        <td>总分</td>
        <td>159</td>
        </tr>
    </tfoot>
    </table>

</body>

</html>

//创建表单

语法：<form method="传送方式" action="服务器文件">

1.**<form> ：**<form>标签是成对出现的，以<form>开始，以</form>结束。

2.**action** **：**浏览者输入的数据被传送到的地方,比如一个PHP页面(save.php)。

3.**method** **：** 数据传送的方式（get/post）。

```html
<form    method="post"   action="save.php">
        <label for="username">用户名:</label>
        <input type="text" name="username" />
        <label for="pass">密码:</label>
        <input type="password" name="pass" />
</form>
```

**注意:**

**1、所有表单控件（文本框、文本域、按钮、单选框、复选框等）都必须放在 <form></form> 标签之间（否则用户输入的信息可提交不到服务器上哦！）。**



<!DOCTYPE HTML>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>表单标签</title>
</head>
<body>
<form method="post" action="save.php">
      <label for="username">用户名:</label>
      <input type="text"  name="username" id="username" value=""  placeholder="请输入用户名"/>
      <label for="pass"><br/>密&nbsp&nbsp&nbsp&nbsp码:</label>
      <input type="password"  name="pass" id="pass" value="" placeholder="请输入密码" />    
      <input type="submit" value="确定"  name="submit" />
      <input type="reset" value="重置" name="reset" />
</form>  
</body>=
</html>

//文本输入框

语法：<form>

<input type="text/password" name="后台名" value="在输入框显示的内容"/></form>

//placeholder属性的使用

**技术点的解释：**

1、placeholder属性为输入框占位符,里面可以放提示的输入信息。

2、placeholder属性的值可以任意填写,当输入框输入内容时,占位符内容消失,输入框无内容时,占位符内容显示。

3、占位符内容不是输入框真正的内容。

上有应用*

//数字输入框![img](https://img4.mukewang.com/5e91972a000112b313990537.jpg)

//网址输入框<input type="url">

<ol>
    <li>数字框的值需以http://或者https://开头,且后面必须有内容,否则表单提交的时候会报错误提示。
    </li>
</ol>

//邮箱输入框<input type="email">

//使用<textarea>(文本域)建留言框

**语法**：

```
<textarea  rows="行数" cols="列数">文本</textarea>
1``、<textarea>标签是成对出现的，以<textarea>开始，以</textarea>结束。
2``、**cols ：**``多行输入域的**列数**。
3``、**rows ：**``多行输入域的**行数**。
4``、在<textarea></textarea>标签之间可以输入**默认值**。
```

`**举例**`**：**

```html
<form  method="post" action="save.php">
        <label>联系我们</label>
        <textarea cols="50" rows="10" >在这里输入内容...</textarea>
</form>
```

//label标签不会向用户呈现任何特殊效果，它的作用是为鼠标用户改进了可用性。如果你在 label 标签内点击文本，就会触发此控件。就是说，当用户单击选中该label标签时，浏览器就会自动将焦点转到和标签相关的表单控件上（就自动选中和该label标签相关连的表单控件上）。

语法：<label for="id">例子：

```html
<form
  <label for="email">输入你的邮箱地址</label>
  <input type="email" id="email" placeholder="Enter email">
</form>
```

//填选框

语法:<input type="radio/checkbox" value="值" name="名称" checked="checked"/>

1、**type:**

  当 **type="radio"** 时，控件为**单选框**

  当 **type="checkbox"** 时，控件为**复选框**

2、**value：**提交数据到服务器的值（后台程序PHP使用）

3、**name：**为控件命名，以备后台程序 ASP、PHP 使用

4、**checked：**当设置 checked="checked" 时，该选项被默认选中

<h5>*单选name必须一致*</h5>

//创建下拉菜单

语法：

<select><option value="后台值">显示值</option></select>

<option value="后台值">显示值</option>

5、selected="selected"：

设置selected="selected"属性，则该选项就被默认选中。

//提交按钮

语法：<input type="submit" value="提交">

//重置按钮

<input type="reset" value="重置">
